<% layout("/layouts/boilerplate")%>

    <div class="row">
        <div class="col-8 offset-2">
    <h3 class="mt-3">create a listing</h3>
    <form method="POST" action="/listings/<%=listing._id%>?_method=PUT" novalidate class="needs-validation" enctype="multipart/form-data">
        <div class="mb-3">
            <label for="name" class="form-label">Name</label>
            <input name="listing[name]" value="<%=listing.name%>" type="text" class="form-control" required>
            <div class="invalid-feedback">
                Enter Valid Name
              </div>

        </div>


        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea name="listing[description]" class="form-control" required><%=listing.description%></textarea>
            <div class="invalid-feedback">
               Enter Short Description
              </div>
        </div>
        <div class="mb-3">
            <label for="price" class="form-label">Price</label>
            <input name="listing[price]" value="<%=listing.price%>" type="number" class="form-control" required>
            <div class="invalid-feedback">
                Enter Price
              </div>
        </div>

        <div class="mb-3">
            <label for="image" class="form-label">Image</label>
            <input  name="listing[images]"  type="file" class="form-control" multiple />
        </div>
        
        
        <div class="row">
            <div class="mb-3 col-md-4">
                <label for="category" class="form-label">Category</label>
                <input name="listing[category]" value="<%=listing.category%>" type="text" class="form-control" required>
                <div class="invalid-feedback">
                    Enter Category
                  </div>
            </div>
            <div class="mb-3 col-md-8">
                <label for="subCategory" class="form-label">SubCategory</label>
                <input name="listing[subCategory]" value="<%=listing.subCategory%>" type="text" class="form-control" required>
                <div class="invalid-feedback">
                    Enter SubCategory
                  </div>
            </div>
        </div>
       
        <div class="mb-3">
            <label for="date" class="form-label">Date</label>
            <input name="listing[date]" value="<%=listing.date%>" type="date" class="form-control" required>
            <div class="invalid-feedback">
                Select Date
              </div>
        </div>
        <div class="mb-3">
            <!-- <label for="sizes" class="form-label">Sizes</label>
            <input name="listing[sizes]" value="<%=//listing.sizes%>" type="text" class="form-control" required> -->
            <div class="mb-3">
                <label class="form-label">Sizes</label><br>
                <div id="size-buttons">
                    <button type="button" class="btn size-btn" data-size="S">S</button>
                    <button type="button" class="btn size-btn" data-size="M">M</button>
                    <button type="button" class="btn size-btn" data-size="L">L</button>
                    <button type="button" class="btn size-btn" data-size="XL">XL</button>
                </div>
                <input type="hidden" name="listing[sizes]" id="size-input" value="<%= JSON.stringify(listing.sizes) %>" required>
                <div class="invalid-feedback">Select at least one size</div>
            </div>
            
            <div class="invalid-feedback">
                Enter Sizes
              </div>
        </div>
       
        <button class="btn btn-dark edit-btn mb-3">Edit</button>
    </form>
</div> 
</div>
<script src="/js/script.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let selectedSizes = JSON.parse(document.getElementById("size-input").value || "[]");
        const sizeButtons = document.querySelectorAll(".size-btn");
        const sizeInput = document.getElementById("size-input");
    
        sizeButtons.forEach(button => {
            let size = button.getAttribute("data-size");
    
            // Highlight pre-selected sizes
            if (selectedSizes.includes(size)) {
                button.classList.add("btn-dark");
            } else {
                button.classList.add("btn-outline-dark");
            }
    
            // Toggle selection
            button.addEventListener("click", function () {
                if (selectedSizes.includes(size)) {
                    selectedSizes = selectedSizes.filter(s => s !== size);
                    this.classList.remove("btn-dark");
                    this.classList.add("btn-outline-dark");
                } else {
                    selectedSizes.push(size);
                    this.classList.add("btn-dark");
                    this.classList.remove("btn-outline-dark");
                }
                sizeInput.value = JSON.stringify(selectedSizes);
            });
        });
    });
    </script>
    